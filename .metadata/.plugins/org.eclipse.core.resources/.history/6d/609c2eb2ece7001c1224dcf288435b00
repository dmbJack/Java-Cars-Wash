package view;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.BevelBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.SystemColor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.JSeparator;
import javax.swing.table.TableModel;

import utils.BaseDeDonnee;

import java.awt.Component;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Agents extends JFrame {

	private JPanel contentPane;
	private JTextField nomField=new JTextField();
	private JTextField prenomField= new JTextField();
	private JTextField usernameField=new JTextField();
	private JPasswordField passwordField=new JPasswordField();
	private int isAdminChecked = 0;
	private int isActiveChecked = 0;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Agents frame = new Agents();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	private JCheckBox isActifField = new JCheckBox("ACTIVER L'AGENT");
	private JCheckBox isAdminField = new JCheckBox("ACCORDER TOUT LES PRIVIL\u00C8GES");
	private ArrayList<String> ifUserExist = new ArrayList<String>();
	private String columns[] = {"ID","NOM COMPLET","ADMIN","ETAT"};
	private DefaultTableModel model = new DefaultTableModel(null, columns);
	public void empty() {
		usernameField.setText("");
		passwordField.setText("");
		nomField.setText("");
		prenomField.setText("");
		
		isAdminField.setDisabledSelectedIcon(null);
		isActifField.setDisabledSelectedIcon(null);
		isAdminChecked=0;
		isActiveChecked=0;
		
	}
	public void update() {
		Connection connection;
		try {
			connection = (Connection) DriverManager.getConnection(BaseDeDonnee.bdMainConfig,BaseDeDonnee.bdName,BaseDeDonnee.bdPassword);
			String query = "SELECT * FROM `user`";
			
			Statement stm = connection.createStatement();
			ResultSet res = stm.executeQuery(query);
			 String data[]= new String[4];
			 model.setRowCount(0);
			 ifUserExist.clear();
		      while (res.next()) {
		    	int id = res.getInt("id");
		    	String nomComplet = res.getString("fullname");
		    	boolean isAdmin = res.getBoolean("isadmin");
		        boolean isActif = res.getBoolean("isactive");
		        String etatAdmin= (isAdmin)? "ADMIN":"NO";
		        String etatActive= (isActif)? "Activé":"Desactivé";
		        data[0] =id+"";
		        data[1] = nomComplet;
		        data[2] = etatAdmin;
		        data[3] = etatActive;
		        ifUserExist.add(res.getString("username"));
		        model.addRow(data);
		      }
		      
		      empty();
		      }catch (SQLException e) {
		    	  e.printStackTrace();
		      }
		
		}

	public Agents() {
		JCheckBox isAdminField = new JCheckBox("ACCORDER TOUT LES PRIVIL\u00C8GES");
		isAdminField.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				isAdminChecked = (isAdminChecked==0)? 1:0;
				System.out.println(isAdminChecked);
				
			}
		});
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 545, 556);
		contentPane = new JPanel();
		contentPane.setBackground(Color.WHITE);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		 JTable table = new JTable(model);
	      table.setShowGrid(true);
	      table.setShowVerticalLines(true);
	      JScrollPane pane = new JScrollPane(table);
	      pane.setViewportBorder(new TitledBorder(new BevelBorder(BevelBorder.LOWERED, new Color(0, 139, 139), new Color(0, 128, 128), new Color(0, 128, 128), new Color(0, 128, 128)), "", TitledBorder.CENTER, TitledBorder.TOP, null, new Color(47, 79, 79)));
	      pane.setBounds(10, 283, 519, 234);
	      
	      contentPane.add(pane);
	      
	    update();
		
		JLabel lblNewLabel = new JLabel("NOM :");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblNewLabel.setBounds(10, 40, 47, 14);
		this.contentPane.add(lblNewLabel);
		
		nomField = new JTextField();
		nomField.setBackground(new Color(224, 255, 255));
		nomField.setBounds(175, 40, 172, 20);
		contentPane.add(nomField);
		nomField.setColumns(10);
		
		JLabel lblPrenom = new JLabel("PRENOM :");
		lblPrenom.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblPrenom.setBounds(10, 71, 67, 14);
		contentPane.add(lblPrenom);
		
		prenomField = new JTextField();
		prenomField.setBackground(new Color(224, 255, 255));
		prenomField.setColumns(10);
		prenomField.setBounds(175, 71, 172, 20);
		contentPane.add(prenomField);
		
		JLabel lblNomDutilisateur = new JLabel("NOM D'UTILISATEUR :");
		lblNomDutilisateur.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblNomDutilisateur.setBounds(10, 103, 158, 14);
		contentPane.add(lblNomDutilisateur);
		
		usernameField = new JTextField();
		usernameField.setBackground(new Color(224, 255, 255));
		usernameField.setColumns(10);
		usernameField.setBounds(175, 102, 172, 20);
		contentPane.add(usernameField);
		
		passwordField = new JPasswordField();
		passwordField.setBackground(new Color(224, 255, 255));
		passwordField.setBounds(175, 133, 172, 20);
		contentPane.add(passwordField);
		
		JLabel lblMotDePasse = new JLabel("MOT DE PASSE :");
		lblMotDePasse.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblMotDePasse.setBounds(10, 136, 158, 14);
		contentPane.add(lblMotDePasse);
		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setBackground(new Color(135, 206, 250));
		lblNewLabel_1.setIcon(new ImageIcon("C:\\Users\\DMB\\Downloads\\images (3).png"));
		lblNewLabel_1.setBounds(280, -24, 241, 272);
		contentPane.add(lblNewLabel_1);
		
		JButton btnNewButton = new JButton("ENREGISTRER");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				try {
					if(!ifUserExist.contains(usernameField.getText())) {
							Connection connection;
							connection = (Connection) DriverManager.getConnection(BaseDeDonnee.bdMainConfig,BaseDeDonnee.bdName,BaseDeDonnee.bdPassword);
							String query = "INSERT INTO `user`(`username`, `password`, `fullname`, `isadmin`, `isactive`) VALUES ('"+usernameField.getText()+"','"+passwordField.getText()+"','"+nomField.getText()+" "+prenomField.getText()+"','"+isAdminChecked+"','"+isActiveChecked+"')";
							Statement stmT;
							stmT = connection.createStatement();
							stmT.executeUpdate(query);			
							update();						
					}else {
						
						JOptionPane.showMessageDialog(null, "Ce nom d'utilisateur existe déja veuillez choisir un autre", "Erreur", JOptionPane.ERROR_MESSAGE);
						usernameField.setText("");
					}
					
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
			}
		});
		btnNewButton.setBackground(new Color(135, 206, 235));
		btnNewButton.setBounds(10, 257, 128, 23);
		contentPane.add(btnNewButton);
		
		JButton btnModifier = new JButton("MODIFIER");
		btnModifier.setBackground(new Color(135, 206, 250));
		btnModifier.setBounds(204, 257, 139, 23);
		contentPane.add(btnModifier);
		
		JButton btnSupprimer = new JButton("SUPPRIMER");
		btnSupprimer.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int i = table.getSelectedRow();
	      		
	            if(i>=0) {
	            	int id = Integer.parseInt(model.getValueAt(i, 0).toString());  
		            int option = JOptionPane.showConfirmDialog(null, 
		              "Êtes vous sur de vouloir supprimer ?", 
		              "SUPPRESSION", 
		              JOptionPane.YES_NO_OPTION, 
		              JOptionPane.WARNING_MESSAGE);
	            	 if(option== JOptionPane.YES_OPTION) {
	            		 empty();
			            	try {
				    			Connection connection = (Connection) DriverManager.getConnection(BaseDeDonnee.bdMainConfig,BaseDeDonnee.bdName,BaseDeDonnee.bdPassword);
				    			PreparedStatement st = (PreparedStatement) connection.prepareStatement("DELETE FROM `user` WHERE id =?");
				    			st.setInt(1, id);
				    			st.executeUpdate();
				    			update();
				    					
				      		}catch (SQLException sqlException) {
				    				sqlException.printStackTrace();
				    			}
			            }
	            }
			}
		});
		btnSupprimer.setBackground(new Color(135, 206, 250));
		btnSupprimer.setBounds(393, 257, 128, 23);
		contentPane.add(btnSupprimer);
		
		
		isAdminField.setForeground(new Color(255, 255, 255));
		isAdminField.setBackground(new Color(250, 128, 114));
		isAdminField.setBounds(10, 195, 241, 23);
		contentPane.add(isAdminField);
		
		
		isActifField.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				isActiveChecked = (isActiveChecked==0)? 1:0;
				System.out.println(isActiveChecked);
			}
		});
		isActifField.setForeground(Color.WHITE);
		isActifField.setBackground(new Color(46, 139, 87));
		isActifField.setBounds(10, 225, 241, 23);
		contentPane.add(isActifField);
		

	     
	}
}
